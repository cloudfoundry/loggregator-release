// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: dropsonde-protocol/events/http.proto

package events

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type of peer handling request.
type PeerType int32

const (
	// Request is made by this process.
	PeerType_Client PeerType = 1
	// Request is received by this process.
	PeerType_Server PeerType = 2
)

// Enum value maps for PeerType.
var (
	PeerType_name = map[int32]string{
		1: "Client",
		2: "Server",
	}
	PeerType_value = map[string]int32{
		"Client": 1,
		"Server": 2,
	}
)

func (x PeerType) Enum() *PeerType {
	p := new(PeerType)
	*p = x
	return p
}

func (x PeerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeerType) Descriptor() protoreflect.EnumDescriptor {
	return file_dropsonde_protocol_events_http_proto_enumTypes[0].Descriptor()
}

func (PeerType) Type() protoreflect.EnumType {
	return &file_dropsonde_protocol_events_http_proto_enumTypes[0]
}

func (x PeerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PeerType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PeerType(num)
	return nil
}

// Deprecated: Use PeerType.Descriptor instead.
func (PeerType) EnumDescriptor() ([]byte, []int) {
	return file_dropsonde_protocol_events_http_proto_rawDescGZIP(), []int{0}
}

// HTTP method.
type Method int32

const (
	Method_GET               Method = 1
	Method_POST              Method = 2
	Method_PUT               Method = 3
	Method_DELETE            Method = 4
	Method_HEAD              Method = 5
	Method_ACL               Method = 6
	Method_BASELINE_CONTROL  Method = 7
	Method_BIND              Method = 8
	Method_CHECKIN           Method = 9
	Method_CHECKOUT          Method = 10
	Method_CONNECT           Method = 11
	Method_COPY              Method = 12
	Method_DEBUG             Method = 13
	Method_LABEL             Method = 14
	Method_LINK              Method = 15
	Method_LOCK              Method = 16
	Method_MERGE             Method = 17
	Method_MKACTIVITY        Method = 18
	Method_MKCALENDAR        Method = 19
	Method_MKCOL             Method = 20
	Method_MKREDIRECTREF     Method = 21
	Method_MKWORKSPACE       Method = 22
	Method_MOVE              Method = 23
	Method_OPTIONS           Method = 24
	Method_ORDERPATCH        Method = 25
	Method_PATCH             Method = 26
	Method_PRI               Method = 27
	Method_PROPFIND          Method = 28
	Method_PROPPATCH         Method = 29
	Method_REBIND            Method = 30
	Method_REPORT            Method = 31
	Method_SEARCH            Method = 32
	Method_SHOWMETHOD        Method = 33
	Method_SPACEJUMP         Method = 34
	Method_TEXTSEARCH        Method = 35
	Method_TRACE             Method = 36
	Method_TRACK             Method = 37
	Method_UNBIND            Method = 38
	Method_UNCHECKOUT        Method = 39
	Method_UNLINK            Method = 40
	Method_UNLOCK            Method = 41
	Method_UPDATE            Method = 42
	Method_UPDATEREDIRECTREF Method = 43
	Method_VERSION_CONTROL   Method = 44
)

// Enum value maps for Method.
var (
	Method_name = map[int32]string{
		1:  "GET",
		2:  "POST",
		3:  "PUT",
		4:  "DELETE",
		5:  "HEAD",
		6:  "ACL",
		7:  "BASELINE_CONTROL",
		8:  "BIND",
		9:  "CHECKIN",
		10: "CHECKOUT",
		11: "CONNECT",
		12: "COPY",
		13: "DEBUG",
		14: "LABEL",
		15: "LINK",
		16: "LOCK",
		17: "MERGE",
		18: "MKACTIVITY",
		19: "MKCALENDAR",
		20: "MKCOL",
		21: "MKREDIRECTREF",
		22: "MKWORKSPACE",
		23: "MOVE",
		24: "OPTIONS",
		25: "ORDERPATCH",
		26: "PATCH",
		27: "PRI",
		28: "PROPFIND",
		29: "PROPPATCH",
		30: "REBIND",
		31: "REPORT",
		32: "SEARCH",
		33: "SHOWMETHOD",
		34: "SPACEJUMP",
		35: "TEXTSEARCH",
		36: "TRACE",
		37: "TRACK",
		38: "UNBIND",
		39: "UNCHECKOUT",
		40: "UNLINK",
		41: "UNLOCK",
		42: "UPDATE",
		43: "UPDATEREDIRECTREF",
		44: "VERSION_CONTROL",
	}
	Method_value = map[string]int32{
		"GET":               1,
		"POST":              2,
		"PUT":               3,
		"DELETE":            4,
		"HEAD":              5,
		"ACL":               6,
		"BASELINE_CONTROL":  7,
		"BIND":              8,
		"CHECKIN":           9,
		"CHECKOUT":          10,
		"CONNECT":           11,
		"COPY":              12,
		"DEBUG":             13,
		"LABEL":             14,
		"LINK":              15,
		"LOCK":              16,
		"MERGE":             17,
		"MKACTIVITY":        18,
		"MKCALENDAR":        19,
		"MKCOL":             20,
		"MKREDIRECTREF":     21,
		"MKWORKSPACE":       22,
		"MOVE":              23,
		"OPTIONS":           24,
		"ORDERPATCH":        25,
		"PATCH":             26,
		"PRI":               27,
		"PROPFIND":          28,
		"PROPPATCH":         29,
		"REBIND":            30,
		"REPORT":            31,
		"SEARCH":            32,
		"SHOWMETHOD":        33,
		"SPACEJUMP":         34,
		"TEXTSEARCH":        35,
		"TRACE":             36,
		"TRACK":             37,
		"UNBIND":            38,
		"UNCHECKOUT":        39,
		"UNLINK":            40,
		"UNLOCK":            41,
		"UPDATE":            42,
		"UPDATEREDIRECTREF": 43,
		"VERSION_CONTROL":   44,
	}
)

func (x Method) Enum() *Method {
	p := new(Method)
	*p = x
	return p
}

func (x Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Method) Descriptor() protoreflect.EnumDescriptor {
	return file_dropsonde_protocol_events_http_proto_enumTypes[1].Descriptor()
}

func (Method) Type() protoreflect.EnumType {
	return &file_dropsonde_protocol_events_http_proto_enumTypes[1]
}

func (x Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Method) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Method(num)
	return nil
}

// Deprecated: Use Method.Descriptor instead.
func (Method) EnumDescriptor() ([]byte, []int) {
	return file_dropsonde_protocol_events_http_proto_rawDescGZIP(), []int{1}
}

// An HttpStartStop event represents the whole lifecycle of an HTTP request.
type HttpStartStop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UNIX timestamp (in nanoseconds) when the request was sent (by a client)
	// or received (by a server).
	StartTimestamp *int64 `protobuf:"varint,1,req,name=startTimestamp" json:"startTimestamp,omitempty"`
	// UNIX timestamp (in nanoseconds) when the request was received.
	StopTimestamp *int64 `protobuf:"varint,2,req,name=stopTimestamp" json:"stopTimestamp,omitempty"`
	// ID for tracking lifecycle of request.
	RequestId *UUID `protobuf:"bytes,3,req,name=requestId" json:"requestId,omitempty"`
	// Role of the emitting process in the request cycle.
	PeerType *PeerType `protobuf:"varint,4,req,name=peerType,enum=events.PeerType" json:"peerType,omitempty"`
	// Method of the request.
	Method *Method `protobuf:"varint,5,req,name=method,enum=events.Method" json:"method,omitempty"`
	// Destination of the request.
	Uri *string `protobuf:"bytes,6,req,name=uri" json:"uri,omitempty"`
	// Remote address of the request. (For a server, this should be the origin
	// of the request.)
	RemoteAddress *string `protobuf:"bytes,7,req,name=remoteAddress" json:"remoteAddress,omitempty"`
	// Contents of the UserAgent header on the request.
	UserAgent *string `protobuf:"bytes,8,req,name=userAgent" json:"userAgent,omitempty"`
	// Status code returned with the response to the request.
	StatusCode *int32 `protobuf:"varint,9,req,name=statusCode" json:"statusCode,omitempty"`
	// Length of response (bytes).
	ContentLength *int64 `protobuf:"varint,10,req,name=contentLength" json:"contentLength,omitempty"`
	// If this request was made in relation to an appliciation, this field
	// should track that application's ID.
	ApplicationId *UUID `protobuf:"bytes,12,opt,name=applicationId" json:"applicationId,omitempty"`
	// Index of the application instance.
	InstanceIndex *int32 `protobuf:"varint,13,opt,name=instanceIndex" json:"instanceIndex,omitempty"`
	// ID of the application instance.
	InstanceId *string `protobuf:"bytes,14,opt,name=instanceId" json:"instanceId,omitempty"`
	// This contains http forwarded-for [x-forwarded-for] header from the
	// request.
	Forwarded []string `protobuf:"bytes,15,rep,name=forwarded" json:"forwarded,omitempty"`
}

func (x *HttpStartStop) Reset() {
	*x = HttpStartStop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dropsonde_protocol_events_http_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpStartStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpStartStop) ProtoMessage() {}

func (x *HttpStartStop) ProtoReflect() protoreflect.Message {
	mi := &file_dropsonde_protocol_events_http_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpStartStop.ProtoReflect.Descriptor instead.
func (*HttpStartStop) Descriptor() ([]byte, []int) {
	return file_dropsonde_protocol_events_http_proto_rawDescGZIP(), []int{0}
}

func (x *HttpStartStop) GetStartTimestamp() int64 {
	if x != nil && x.StartTimestamp != nil {
		return *x.StartTimestamp
	}
	return 0
}

func (x *HttpStartStop) GetStopTimestamp() int64 {
	if x != nil && x.StopTimestamp != nil {
		return *x.StopTimestamp
	}
	return 0
}

func (x *HttpStartStop) GetRequestId() *UUID {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *HttpStartStop) GetPeerType() PeerType {
	if x != nil && x.PeerType != nil {
		return *x.PeerType
	}
	return PeerType_Client
}

func (x *HttpStartStop) GetMethod() Method {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return Method_GET
}

func (x *HttpStartStop) GetUri() string {
	if x != nil && x.Uri != nil {
		return *x.Uri
	}
	return ""
}

func (x *HttpStartStop) GetRemoteAddress() string {
	if x != nil && x.RemoteAddress != nil {
		return *x.RemoteAddress
	}
	return ""
}

func (x *HttpStartStop) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

func (x *HttpStartStop) GetStatusCode() int32 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

func (x *HttpStartStop) GetContentLength() int64 {
	if x != nil && x.ContentLength != nil {
		return *x.ContentLength
	}
	return 0
}

func (x *HttpStartStop) GetApplicationId() *UUID {
	if x != nil {
		return x.ApplicationId
	}
	return nil
}

func (x *HttpStartStop) GetInstanceIndex() int32 {
	if x != nil && x.InstanceIndex != nil {
		return *x.InstanceIndex
	}
	return 0
}

func (x *HttpStartStop) GetInstanceId() string {
	if x != nil && x.InstanceId != nil {
		return *x.InstanceId
	}
	return ""
}

func (x *HttpStartStop) GetForwarded() []string {
	if x != nil {
		return x.Forwarded
	}
	return nil
}

var File_dropsonde_protocol_events_http_proto protoreflect.FileDescriptor

var file_dropsonde_protocol_events_http_proto_rawDesc = []byte{
	0x0a, 0x24, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x6f, 0x6e, 0x64, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x24,
	0x64, 0x72, 0x6f, 0x70, 0x73, 0x6f, 0x6e, 0x64, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x04, 0x0a, 0x0d, 0x48, 0x74, 0x74, 0x70, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0e,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x2a, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x06, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0a, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x12, 0x32, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x4a, 0x04, 0x08, 0x0b, 0x10, 0x0c,
	0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x2a, 0x22, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x10, 0x02, 0x2a, 0xc6, 0x04, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f, 0x53,
	0x54, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x55, 0x54, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x45, 0x41, 0x44,
	0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x43, 0x4c, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x42,
	0x41, 0x53, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x10,
	0x07, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x49, 0x4e, 0x44, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x48, 0x45, 0x43, 0x4b, 0x49, 0x4e, 0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x48, 0x45, 0x43,
	0x4b, 0x4f, 0x55, 0x54, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
	0x54, 0x10, 0x0b, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x4f, 0x50, 0x59, 0x10, 0x0c, 0x12, 0x09, 0x0a,
	0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x0d, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x41, 0x42, 0x45,
	0x4c, 0x10, 0x0e, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x0f, 0x12, 0x08, 0x0a,
	0x04, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x10, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x45, 0x52, 0x47, 0x45,
	0x10, 0x11, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4b, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x10, 0x12, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4b, 0x43, 0x41, 0x4c, 0x45, 0x4e, 0x44, 0x41, 0x52,
	0x10, 0x13, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4b, 0x43, 0x4f, 0x4c, 0x10, 0x14, 0x12, 0x11, 0x0a,
	0x0d, 0x4d, 0x4b, 0x52, 0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x52, 0x45, 0x46, 0x10, 0x15,
	0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x4b, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10,
	0x16, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x17, 0x12, 0x0b, 0x0a, 0x07, 0x4f,
	0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x18, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x50, 0x41, 0x54, 0x43, 0x48, 0x10, 0x19, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x41, 0x54, 0x43,
	0x48, 0x10, 0x1a, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x52, 0x49, 0x10, 0x1b, 0x12, 0x0c, 0x0a, 0x08,
	0x50, 0x52, 0x4f, 0x50, 0x46, 0x49, 0x4e, 0x44, 0x10, 0x1c, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52,
	0x4f, 0x50, 0x50, 0x41, 0x54, 0x43, 0x48, 0x10, 0x1d, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x42,
	0x49, 0x4e, 0x44, 0x10, 0x1e, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10,
	0x1f, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x20, 0x12, 0x0e, 0x0a,
	0x0a, 0x53, 0x48, 0x4f, 0x57, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x10, 0x21, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x50, 0x41, 0x43, 0x45, 0x4a, 0x55, 0x4d, 0x50, 0x10, 0x22, 0x12, 0x0e, 0x0a, 0x0a,
	0x54, 0x45, 0x58, 0x54, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x23, 0x12, 0x09, 0x0a, 0x05,
	0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x24, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x41, 0x43, 0x4b,
	0x10, 0x25, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x42, 0x49, 0x4e, 0x44, 0x10, 0x26, 0x12, 0x0e,
	0x0a, 0x0a, 0x55, 0x4e, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x4f, 0x55, 0x54, 0x10, 0x27, 0x12, 0x0a,
	0x0a, 0x06, 0x55, 0x4e, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x28, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e,
	0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x29, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x2a, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x52, 0x45, 0x44, 0x49,
	0x52, 0x45, 0x43, 0x54, 0x52, 0x45, 0x46, 0x10, 0x2b, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x45, 0x52,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x10, 0x2c, 0x42, 0x59,
	0x0a, 0x21, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x72, 0x79, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x6f, 0x6e, 0x64, 0x65, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x0b, 0x48, 0x74, 0x74, 0x70, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x72, 0x79, 0x2f, 0x73, 0x6f, 0x6e, 0x64, 0x65, 0x2d,
	0x67, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
}

var (
	file_dropsonde_protocol_events_http_proto_rawDescOnce sync.Once
	file_dropsonde_protocol_events_http_proto_rawDescData = file_dropsonde_protocol_events_http_proto_rawDesc
)

func file_dropsonde_protocol_events_http_proto_rawDescGZIP() []byte {
	file_dropsonde_protocol_events_http_proto_rawDescOnce.Do(func() {
		file_dropsonde_protocol_events_http_proto_rawDescData = protoimpl.X.CompressGZIP(file_dropsonde_protocol_events_http_proto_rawDescData)
	})
	return file_dropsonde_protocol_events_http_proto_rawDescData
}

var file_dropsonde_protocol_events_http_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_dropsonde_protocol_events_http_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_dropsonde_protocol_events_http_proto_goTypes = []interface{}{
	(PeerType)(0),         // 0: events.PeerType
	(Method)(0),           // 1: events.Method
	(*HttpStartStop)(nil), // 2: events.HttpStartStop
	(*UUID)(nil),          // 3: events.UUID
}
var file_dropsonde_protocol_events_http_proto_depIdxs = []int32{
	3, // 0: events.HttpStartStop.requestId:type_name -> events.UUID
	0, // 1: events.HttpStartStop.peerType:type_name -> events.PeerType
	1, // 2: events.HttpStartStop.method:type_name -> events.Method
	3, // 3: events.HttpStartStop.applicationId:type_name -> events.UUID
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_dropsonde_protocol_events_http_proto_init() }
func file_dropsonde_protocol_events_http_proto_init() {
	if File_dropsonde_protocol_events_http_proto != nil {
		return
	}
	file_dropsonde_protocol_events_uuid_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dropsonde_protocol_events_http_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpStartStop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dropsonde_protocol_events_http_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dropsonde_protocol_events_http_proto_goTypes,
		DependencyIndexes: file_dropsonde_protocol_events_http_proto_depIdxs,
		EnumInfos:         file_dropsonde_protocol_events_http_proto_enumTypes,
		MessageInfos:      file_dropsonde_protocol_events_http_proto_msgTypes,
	}.Build()
	File_dropsonde_protocol_events_http_proto = out.File
	file_dropsonde_protocol_events_http_proto_rawDesc = nil
	file_dropsonde_protocol_events_http_proto_goTypes = nil
	file_dropsonde_protocol_events_http_proto_depIdxs = nil
}
