// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: log.proto

package events

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

/// MessageType stores the destination of the message (corresponding to STDOUT or STDERR).
type LogMessage_MessageType int32

const (
	LogMessage_OUT LogMessage_MessageType = 1
	LogMessage_ERR LogMessage_MessageType = 2
)

var LogMessage_MessageType_name = map[int32]string{
	1: "OUT",
	2: "ERR",
}

var LogMessage_MessageType_value = map[string]int32{
	"OUT": 1,
	"ERR": 2,
}

func (x LogMessage_MessageType) Enum() *LogMessage_MessageType {
	p := new(LogMessage_MessageType)
	*p = x
	return p
}

func (x LogMessage_MessageType) String() string {
	return proto.EnumName(LogMessage_MessageType_name, int32(x))
}

func (x *LogMessage_MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LogMessage_MessageType_value, data, "LogMessage_MessageType")
	if err != nil {
		return err
	}
	*x = LogMessage_MessageType(value)
	return nil
}

func (LogMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{0, 0}
}

/// A LogMessage contains a "log line" and associated metadata.
type LogMessage struct {
	Message              []byte                  `protobuf:"bytes,1,req,name=message" json:"message,omitempty"`
	MessageType          *LogMessage_MessageType `protobuf:"varint,2,req,name=message_type,json=messageType,enum=events.LogMessage_MessageType" json:"message_type,omitempty"`
	Timestamp            *int64                  `protobuf:"varint,3,req,name=timestamp" json:"timestamp,omitempty"`
	AppId                *string                 `protobuf:"bytes,4,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	SourceType           *string                 `protobuf:"bytes,5,opt,name=source_type,json=sourceType" json:"source_type,omitempty"`
	SourceInstance       *string                 `protobuf:"bytes,6,opt,name=source_instance,json=sourceInstance" json:"source_instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *LogMessage) Reset()         { *m = LogMessage{} }
func (m *LogMessage) String() string { return proto.CompactTextString(m) }
func (*LogMessage) ProtoMessage()    {}
func (*LogMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{0}
}
func (m *LogMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LogMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LogMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LogMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogMessage.Merge(m, src)
}
func (m *LogMessage) XXX_Size() int {
	return m.Size()
}
func (m *LogMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_LogMessage.DiscardUnknown(m)
}

var xxx_messageInfo_LogMessage proto.InternalMessageInfo

func (m *LogMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *LogMessage) GetMessageType() LogMessage_MessageType {
	if m != nil && m.MessageType != nil {
		return *m.MessageType
	}
	return LogMessage_OUT
}

func (m *LogMessage) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *LogMessage) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *LogMessage) GetSourceType() string {
	if m != nil && m.SourceType != nil {
		return *m.SourceType
	}
	return ""
}

func (m *LogMessage) GetSourceInstance() string {
	if m != nil && m.SourceInstance != nil {
		return *m.SourceInstance
	}
	return ""
}

func init() {
	proto.RegisterEnum("events.LogMessage_MessageType", LogMessage_MessageType_name, LogMessage_MessageType_value)
	proto.RegisterType((*LogMessage)(nil), "events.LogMessage")
}

func init() { proto.RegisterFile("log.proto", fileDescriptor_a153da538f858886) }

var fileDescriptor_a153da538f858886 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0x69, 0xe7, 0x36, 0x76, 0x36, 0xe6, 0x08, 0x08, 0x45, 0xa4, 0xab, 0xbb, 0xb1, 0x37,
	0x66, 0xe0, 0xad, 0x57, 0x0e, 0x14, 0x06, 0x8a, 0x50, 0xe6, 0xf5, 0xc8, 0x9a, 0x2c, 0x16, 0xd6,
	0x9e, 0x90, 0xa4, 0x42, 0x1f, 0xc1, 0x37, 0xf3, 0xd2, 0x47, 0x90, 0x3d, 0x89, 0x2c, 0x8d, 0xd4,
	0xab, 0xfc, 0xff, 0x77, 0x4e, 0xce, 0x9f, 0x1c, 0x18, 0x1d, 0x50, 0x52, 0xa5, 0xd1, 0x22, 0x19,
	0x88, 0x0f, 0x51, 0x59, 0x73, 0x79, 0x2b, 0x0b, 0xfb, 0x5e, 0xef, 0x68, 0x8e, 0xe5, 0x52, 0xa2,
	0xc4, 0xa5, 0x2b, 0xef, 0xea, 0xbd, 0x73, 0xce, 0x38, 0xd5, 0x5e, 0x5b, 0x7c, 0x86, 0x00, 0xcf,
	0x28, 0x5f, 0x84, 0x31, 0x4c, 0x0a, 0x12, 0xc1, 0xb0, 0x6c, 0x65, 0x14, 0x24, 0x61, 0x3a, 0xc9,
	0xfe, 0x2c, 0x79, 0x80, 0x89, 0x97, 0x5b, 0xdb, 0x28, 0x11, 0x85, 0x49, 0x98, 0x4e, 0xef, 0x62,
	0xda, 0xc6, 0xd2, 0x6e, 0x06, 0xf5, 0xe7, 0xa6, 0x51, 0x22, 0x1b, 0x97, 0x9d, 0x21, 0x57, 0x30,
	0xb2, 0x45, 0x29, 0x8c, 0x65, 0xa5, 0x8a, 0x7a, 0x49, 0x98, 0xf6, 0xb2, 0x0e, 0x90, 0x0b, 0x18,
	0x30, 0xa5, 0xb6, 0x05, 0x8f, 0xce, 0x92, 0x20, 0x1d, 0x65, 0x7d, 0xa6, 0xd4, 0x9a, 0x93, 0x39,
	0x8c, 0x0d, 0xd6, 0x3a, 0xf7, 0xb1, 0x7d, 0x57, 0x83, 0x16, 0xb9, 0xa9, 0x37, 0x70, 0xee, 0x1b,
	0x8a, 0xca, 0x58, 0x56, 0xe5, 0x22, 0x1a, 0xb8, 0xa6, 0x69, 0x8b, 0xd7, 0x9e, 0x2e, 0xe6, 0x30,
	0xfe, 0xf7, 0x34, 0x32, 0x84, 0xde, 0xeb, 0xdb, 0x66, 0x16, 0x9c, 0xc4, 0x63, 0x96, 0xcd, 0xc2,
	0xd5, 0xfd, 0xd7, 0x31, 0x0e, 0xbe, 0x8f, 0x71, 0xf0, 0x73, 0x8c, 0x03, 0xb8, 0x46, 0x2d, 0x69,
	0x7e, 0xc0, 0x9a, 0xef, 0xb1, 0xae, 0xb8, 0x6e, 0x28, 0xd7, 0xa8, 0x0c, 0x56, 0x5c, 0xf8, 0x4f,
	0xaf, 0x4e, 0x9b, 0x7b, 0x62, 0xb9, 0x45, 0xdd, 0xfc, 0x06, 0x00, 0x00, 0xff, 0xff, 0xb0, 0x4c,
	0x0b, 0xe4, 0x8b, 0x01, 0x00, 0x00,
}

func (m *LogMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LogMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LogMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SourceInstance != nil {
		i -= len(*m.SourceInstance)
		copy(dAtA[i:], *m.SourceInstance)
		i = encodeVarintLog(dAtA, i, uint64(len(*m.SourceInstance)))
		i--
		dAtA[i] = 0x32
	}
	if m.SourceType != nil {
		i -= len(*m.SourceType)
		copy(dAtA[i:], *m.SourceType)
		i = encodeVarintLog(dAtA, i, uint64(len(*m.SourceType)))
		i--
		dAtA[i] = 0x2a
	}
	if m.AppId != nil {
		i -= len(*m.AppId)
		copy(dAtA[i:], *m.AppId)
		i = encodeVarintLog(dAtA, i, uint64(len(*m.AppId)))
		i--
		dAtA[i] = 0x22
	}
	if m.Timestamp == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("timestamp")
	} else {
		i = encodeVarintLog(dAtA, i, uint64(*m.Timestamp))
		i--
		dAtA[i] = 0x18
	}
	if m.MessageType == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("message_type")
	} else {
		i = encodeVarintLog(dAtA, i, uint64(*m.MessageType))
		i--
		dAtA[i] = 0x10
	}
	if m.Message == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("message")
	} else {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintLog(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintLog(dAtA []byte, offset int, v uint64) int {
	offset -= sovLog(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *LogMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Message != nil {
		l = len(m.Message)
		n += 1 + l + sovLog(uint64(l))
	}
	if m.MessageType != nil {
		n += 1 + sovLog(uint64(*m.MessageType))
	}
	if m.Timestamp != nil {
		n += 1 + sovLog(uint64(*m.Timestamp))
	}
	if m.AppId != nil {
		l = len(*m.AppId)
		n += 1 + l + sovLog(uint64(l))
	}
	if m.SourceType != nil {
		l = len(*m.SourceType)
		n += 1 + l + sovLog(uint64(l))
	}
	if m.SourceInstance != nil {
		l = len(*m.SourceInstance)
		n += 1 + l + sovLog(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovLog(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozLog(x uint64) (n int) {
	return sovLog(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *LogMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLog
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LogMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LogMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthLog
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = append(m.Message[:0], dAtA[iNdEx:postIndex]...)
			if m.Message == nil {
				m.Message = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageType", wireType)
			}
			var v LogMessage_MessageType
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= LogMessage_MessageType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageType = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Timestamp = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AppId = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SourceType = &s
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceInstance", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SourceInstance = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLog(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLog
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("message")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("message_type")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("timestamp")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipLog(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowLog
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLog
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLog
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthLog
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupLog
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthLog
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthLog        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowLog          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupLog = fmt.Errorf("proto: unexpected end of group")
)
