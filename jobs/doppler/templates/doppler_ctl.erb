#!/bin/bash -e

<%
    lockedMem = p("doppler.locked_memory_limit")
    if (!lockedMem.is_a? Numeric) && (!["kernel", "soft", "hard", "unlimited"].include? lockedMem) then
        raise lockedMem + ": invalid locked_memory_limit"
    end
%>

RUN_DIR=/var/vcap/sys/run/doppler
LOG_DIR=/var/vcap/sys/log/doppler
PIDFILE=$RUN_DIR/doppler.pid

mkdir -p $RUN_DIR
mkdir -p $LOG_DIR

source /var/vcap/packages/loggregator_common/pid_utils.sh
source /var/vcap/packages/loggregator_common/syslog_utils.sh

tee_output_to_sys_log "$LOG_DIR"

case $1 in

  start)
    pid_guard $PIDFILE "Loggregator"

    <% if p("doppler.locked_memory_limit") != "kernel" %>
    ulimit -l <%= p("doppler.locked_memory_limit") %>
    <% end %>
    ulimit -n 65536

    exec >>$LOG_DIR/doppler.stdout.log  \
       2>>$LOG_DIR/doppler.stderr.log

    zone_flag=""
<% if p("doppler.use_azure_fault_domains") %>
    set +e
    azure_fd=$(curl -f --max-time 5 --connect-timeout 5 --silent http://169.254.169.254/metadata/v1/InstanceInfo/FD)
    if [ 0 -eq $? ]; then
        zone_flag="--zone=z${azure_fd}"
    fi
    set -e
<% end %>

    chown -R vcap:vcap $LOG_DIR

    chpst -u vcap:vcap /var/vcap/packages/doppler/doppler \
         --config /var/vcap/jobs/doppler/config/doppler.json \
         ${zone_flag} &

    echo $! > $PIDFILE

    ;;

  stop)
    kill_and_wait $PIDFILE 40

    ;;

  *)
    echo "Usage: doppler {start|stop}"

    ;;

esac
