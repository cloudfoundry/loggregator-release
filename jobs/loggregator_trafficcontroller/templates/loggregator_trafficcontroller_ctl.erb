#!/bin/bash -e

<%
    lockedMem = p("traffic_controller.locked_memory_limit")
    if (!lockedMem.is_a? Numeric) && (!["kernel", "soft", "hard", "unlimited"].include? lockedMem) then
        raise lockedMem + ": invalid locked_memory_limit"
    end
%>

RUN_DIR=/var/vcap/sys/run/loggregator_trafficcontroller
LOG_DIR=/var/vcap/sys/log/loggregator_trafficcontroller
PIDFILE=$RUN_DIR/loggregator_trafficcontroller.pid

mkdir -p $RUN_DIR
mkdir -p $LOG_DIR
<% if p("traffic_controller.security_event_logging.enabled") %>
touch $LOG_DIR/loggregator_trafficcontroller_security_events.log
<% end %>

case $1 in

  start)
    set +e
      killall -15 trafficcontroller
      killall -9 trafficcontroller
      killall -2 trafficcontroller
      killall -3 trafficcontroller
    set -e

    <% if p("traffic_controller.locked_memory_limit") != "kernel" %>
    ulimit -l <%= p("traffic_controller.locked_memory_limit") %>
    <% end %>
    ulimit -n 65536

    <% p("traffic_controller.disable_access_control") == true ? disable_access_control_string = "--disableAccessControl" : disable_access_control_string = "" %>

    chown -R vcap:vcap $LOG_DIR

    chpst -u vcap:vcap /var/vcap/packages/loggregator_trafficcontroller/trafficcontroller <%= disable_access_control_string %> \
         --config /var/vcap/jobs/loggregator_trafficcontroller/config/loggregator_trafficcontroller.json 2>&1 | \
         tee -a "$LOG_DIR/trafficcontroller.log" | \
         logger -t "vcap.trafficcontroller" -p user.error &

    jobs -p > $PIDFILE

    ;;

  stop)
    set +e
      killall -15 trafficcontroller
      killall -9 trafficcontroller
      killall -2 trafficcontroller
      killall -3 trafficcontroller
    set -e

    rm -f $PIDFILE

    ;;

  *)
    echo "Usage: loggregator_trafficcontroller {start|stop}"

    ;;

esac
