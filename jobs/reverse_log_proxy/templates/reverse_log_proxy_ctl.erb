#!/bin/bash -e

RUN_DIR=/var/vcap/sys/run/reverse_log_proxy
LOG_DIR=/var/vcap/sys/log/reverse_log_proxy
PIDFILE=${RUN_DIR}/reverse_log_proxy.pid
JOB_DIR=/var/vcap/jobs/reverse_log_proxy
CERT_DIR=$JOB_DIR/config/certs

PACKAGE_DIR=/var/vcap/packages/reverse_log_proxy

case $1 in

  start)
    set +e
      killall -15 rlp
      killall -9 rlp
      killall -2 rlp
      killall -3 rlp
    set -e

    mkdir -p $RUN_DIR $LOG_DIR
    chown -R vcap:vcap $RUN_DIR $LOG_DIR

    cd $PACKAGE_DIR

    ulimit -n 8192

    <%
        ingress_addrs = []
        if_link("doppler") { |ds|
            ingress_addrs = ds.instances.map do |instance|
                "#{instance.address}:#{ds.p('doppler.grpc_port')}"
            end
        }.else {
            ingress_addrs = p('loggregator.doppler.addrs').map do |addr|
                "#{addr}:#{p('loggregator.doppler.grpc_port')}"
            end
        }
    %>

    echo $$ > $PIDFILE
    exec chpst -u vcap:vcap ./rlp \
      --pprof-port="<%= p('reverse_log_proxy.pprof.port') %>" \
      --health-addr="<%= p('reverse_log_proxy.health_addr') %>" \
      --egress-port="<%= p('reverse_log_proxy.egress.port') %>" \
      --ingress-addrs="<%= ingress_addrs.join(',') %>" \
      --ca=$CERT_DIR/mutual_tls_ca.crt \
      --cert=$CERT_DIR/reverse_log_proxy.crt \
      --key=$CERT_DIR/reverse_log_proxy.key \
      --cipher-suites="<%= p('loggregator.tls.cipher_suites') %>" \
      --metron-addr="<%= [ p('metron_endpoint.host'), p('metron_endpoint.grpc_port')].join(':') %>" \
      --metric-emitter-interval="<%= p('metric_emitter.interval') %>" \
      &>> ${LOG_DIR}/rlp.log

    ;;

  stop)
    set +e
      killall -15 rlp
      killall -9 rlp
      killall -2 rlp
      killall -3 rlp
    set -e

    rm -f $PIDFILE

    ;;

  *)
    echo "Usage: reverse_log_proxy_ctl {start|stop}"

    ;;

esac
