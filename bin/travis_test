#!/bin/bash

trap "echo Exited!; exit 1;" SIGINT SIGTERM

BIN_DIR=$( cd "$( dirname "$0" )" && pwd )

pushd $BIN_DIR/../src/github.com/coreos/etcd
./build
popd

mv $BIN_DIR/../src/github.com/coreos/etcd/bin/etcd $BIN_DIR/etcd

export PATH=$PATH:$BIN_DIR

rm -rf ./pkg

result=0

function green {
    if [[ -n "$TERM" ]]; then
        echo -e "$(tput setaf 2)$1$(tput sgr0)"
    else
        echo ":) $1"
    fi
}

function red {
    if [[ -n "$TERM" ]]; then
        echo -e "$(tput setaf 1)$1$(tput sgr0)"
    else
        echo ":( $1"
    fi
}

function bold_blue {
    if [[ -n "$TERM" ]]; then
        echo -e "$(tput setaf 6; tput bold)$1$(tput sgr0)"
    else
        echo "$1"
    fi
}

unit_testable_packages=(
    deaagent
    trafficcontroller
    metron
    doppler
    syslog_drain_binder
)

for package in "${unit_testable_packages[@]}"
do
    local_result=$result
    echo
    bold_blue "==================================  Unit-Testing $package  =================================="
    go fmt $package/...
    ginkgo -r --race --randomizeAllSpecs --cover $1 src/$package
    let "result += $?"
    echo "Current result: $result"
    echo -e "\n Vetting $package"
    go vet $package/...
    let "result += $?"
    echo "Current result: $result"
    if [ $result -gt $local_result ]; then
        red "Package $package FAILED unit tests"
    else
        green "Package $package PASSED unit tests"
    fi
done

integration_testable_packages=(
  doppler
  deaagent
  metron
  trafficcontroller
)

for package in "${integration_testable_packages[@]}"
do
    local_result=$result
    bold_blue "\n ==================================  Integration-Testing $package  =================================="
    ginkgo -r --race --randomizeAllSpecs $1 src/integration_tests/$package
    let "result += $?"
    echo "Current result: $result"
    if [ $result -gt $local_result ]; then
        red " Package $package FAILED integration tests"
    else
        green " Package $package PASSED integration tests"
    fi
done

if [ $result -eq 0 ]; then
	green "\nSUITE SUCCESS"
else
	red "\nSUITE FAILURE"
fi

exit $result
